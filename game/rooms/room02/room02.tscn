[gd_scene load_steps=32 format=2]

[ext_resource path="res://game/rooms/room02/backgrond.png" type="Texture" id=1]
[ext_resource path="res://addons/escoria-core/game/assets/images/no_image.png" type="Texture" id=2]
[ext_resource path="res://game/fonts/caslonantique.tres" type="DynamicFont" id=3]
[ext_resource path="res://game/characters/mark/mark.tscn" type="PackedScene" id=4]
[ext_resource path="res://game/rooms/room01/water.gd" type="Script" id=5]
[ext_resource path="res://addons/escoria-core/game/core-scripts/esc_room.gd" type="Script" id=6]
[ext_resource path="res://addons/escoria-core/game/core-scripts/esc_item.gd" type="Script" id=7]
[ext_resource path="res://addons/escoria-core/game/core-scripts/esc_location.gd" type="Script" id=8]
[ext_resource path="res://addons/escoria-core/game/core-scripts/esc_background.gd" type="Script" id=9]
[ext_resource path="res://addons/escoria-core/game/core-scripts/esc_terrain.gd" type="Script" id=10]
[ext_resource path="res://game/items/textures/genericItem_color_096.png" type="Texture" id=11]
[ext_resource path="res://game/rooms/room02/waterfall_foreground.png" type="Texture" id=12]
[ext_resource path="res://game/rooms/room02/fg.png" type="Texture" id=16]
[ext_resource path="res://game/characters/mark/png/mark_talk_down_right.png" type="Texture" id=17]
[ext_resource path="res://game/assets_sources/mark/mark_talk_up.png" type="Texture" id=18]
[ext_resource path="res://game/rooms/room02/cliff.png" type="Texture" id=19]
[ext_resource path="res://game/rooms/room02/gnd.png" type="Texture" id=20]

[sub_resource type="NavigationPolygon" id=43]
vertices = PoolVector2Array( 1026, 456, 959.133, 404.36, 1076, 364, 1092, 438, 1084, 478, 891, 388, 927, 381, 925, 411, 850, 419, 842, 394, 734, 412, 785, 387, 740, 378, 695, 416, 547, 454, 588, 437, 719, 443, 691, 488, 495, 504, 51.5272, 590.662, 4, 577, -2, 495, 152, 519, 128, 577, 226, 578, 247, 548, 436, 580, 316, 543, 428, 537, 796, 550, 740, 533, 1252, 468, 1112, 491, 1126, 505, 902, 633, 654, 634, 652, 605, 924, 591, 1294, 380, 1383, 387, 1384, 630, 987, 603, 1017, 596, 1035, 592, 1070, 560, 1118, 529 )
polygons = [ PoolIntArray( 0, 1, 2, 3, 4 ), PoolIntArray( 5, 6, 7, 8 ), PoolIntArray( 9, 5, 8, 10 ), PoolIntArray( 11, 9, 10 ), PoolIntArray( 12, 11, 10, 13 ), PoolIntArray( 14, 15, 13, 10, 16, 17, 18 ), PoolIntArray( 19, 20, 21, 22, 23 ), PoolIntArray( 24, 23, 22, 25 ), PoolIntArray( 26, 24, 25, 27, 28 ), PoolIntArray( 17, 26, 28, 18 ), PoolIntArray( 17, 16, 29, 30 ), PoolIntArray( 4, 3, 31, 32 ), PoolIntArray( 33, 32, 31 ), PoolIntArray( 34, 35, 36, 30, 29, 37 ), PoolIntArray( 38, 39, 40, 31 ), PoolIntArray( 34, 37, 41 ), PoolIntArray( 40, 34, 41, 42, 43 ), PoolIntArray( 31, 40, 43, 44, 45 ), PoolIntArray( 31, 45, 33 ) ]
outlines = [ PoolVector2Array( -2, 495, 4, 577, 51.5272, 590.662, 128, 577, 226, 578, 436, 580, 691, 488, 740, 533, 652, 605, 654, 634, 902, 633, 1384, 630, 1383, 387, 1294, 380, 1252, 468, 1092, 438, 1076, 364, 959.133, 404.36, 1026, 456, 1084, 478, 1112, 491, 1126, 505, 1118, 529, 1070, 560, 1035, 592, 1017, 596, 987, 603, 924, 591, 796, 550, 719, 443, 734, 412, 850, 419, 925, 411, 927, 381, 891, 388, 842, 394, 785, 387, 740, 378, 695, 416, 588, 437, 547, 454, 495, 504, 428, 537, 316, 543, 247, 548, 152, 519 ) ]

[sub_resource type="Shader" id=35]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/2d-waterfall

Feel free to improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform vec2 scale; // Used for sprite script. Don't edit this value in the inspector.
uniform float zoom; // Used for sprite script. Don't edit this value in the inspector.

uniform sampler2D refraction_map;
uniform sampler2D water_mask;

uniform vec2 gap_stretch = vec2(0.8, 0.05);
uniform vec2 refraction_stretch = vec2(2.0, 0.8);
uniform float refraction_strength : hint_range(0.0, 0.1) = 0.02;

uniform vec4 water_tint : hint_color = vec4(0.2, 0.6, 1.0, 0.1);
uniform vec4 water_highlight : hint_color = vec4(1.0, 1.0, 1.0, 0.3);
uniform float speed = 1.0;
uniform float flow_gaps : hint_range(0.0, 1.0) = 0.33;
uniform float highlight_width : hint_range(0.0, 0.3) = 0.02;

void fragment()
{
	// Get the two noise textures and make them move on the y axis. The gaps move twice as fast as the refraction, but you can tweak this by changing (speed * 0.5)
	vec2 refraction_offset = texture(refraction_map, vec2(UV.x, UV.y + -TIME * speed * 0.5) * scale * refraction_stretch).xy;
	vec2 gap_mask = texture(water_mask, vec2(UV.x, UV.y + -TIME * speed) * scale * gap_stretch).xy;
	
	// Set values between -0.5 and 0.5 (instead of 0 and 1). Otherwise the reflection will move whith increased refraction_strength
	refraction_offset -= 0.5; 
	
	// Get the screen texture and distort it
	vec4 refraction = texture(SCREEN_TEXTURE, SCREEN_UV - refraction_offset * refraction_strength * zoom);
	
	
	// Create holes and apply colors and textures //
	
	vec4 color = vec4(1.0);
	
	// Define what values will be the water highlight color (the gap border)
	float inner_edge = flow_gaps + highlight_width;
	
	// See if the pixel is within the edges range and use the water colors alpha to blend between showing color or refraction texture.
	if (gap_mask.x < inner_edge)
	{
		color.rgb = mix(refraction.rgb, water_highlight.rgb, water_highlight.a);
	}
	else
	{
		color.rgb = mix(refraction.rgb, water_tint.rgb, water_tint.a);
	}
	
	// If the value is below the gap threshhold make it transparent (a gap)
	if (gap_mask.x < flow_gaps)
	{
		color.a = 0.0;
	}
	
	
	// Crate Edge Shape //
	
	// Set the shape for the top and bottom edges. Use water_mask as shape but with other values to flatten it out horizontally. 
	vec2 water_edge = texture(water_mask, vec2(UV.x, UV.y + -TIME * 0.1) * scale * vec2(0.15, 0.6)).xy;
	water_edge -= 0.5;
	
	// Use the same mask as for the gaps for left and right edge.
	vec2 vertical_edge_mask = gap_mask - 0.5;
	
	// Apply the new masks to the edges. This will make the wobble effect.
	color.a = mix(0.0, color.a, step(UV.x + vertical_edge_mask.x * 0.2, 0.92)); // Right edge
	color.a = mix(color.a, 0.0, step(UV.x - vertical_edge_mask.x * 0.2, 0.08)); // Left edge
	
	color.a = mix(0.0, color.a, step(UV.y + water_edge.y * 0.1, 0.95));  //Bottom edge
	color.a = mix(color.a, 0.0, step(UV.y - water_edge.y * 0.05, 0.05)); //Top edge
	
	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=40]

[sub_resource type="NoiseTexture" id=37]
seamless = true
noise = SubResource( 40 )

[sub_resource type="OpenSimplexNoise" id=41]

[sub_resource type="NoiseTexture" id=39]
seamless = true
noise = SubResource( 41 )

[sub_resource type="ShaderMaterial" id=42]
shader = SubResource( 35 )
shader_param/scale = Vector2( 2.3, 2 )
shader_param/zoom = 0.749154
shader_param/gap_stretch = Vector2( 0.2, 0.1 )
shader_param/refraction_stretch = Vector2( 1.5, 0.6 )
shader_param/refraction_strength = 0.02
shader_param/water_tint = Color( 0.2, 0.6, 1, 0.1 )
shader_param/water_highlight = Color( 1, 1, 1, 0.3 )
shader_param/speed = 1.0
shader_param/flow_gaps = 0.33
shader_param/highlight_width = 0.02
shader_param/refraction_map = SubResource( 37 )
shader_param/water_mask = SubResource( 39 )

[sub_resource type="Shader" id=44]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=45]
shader = SubResource( 44 )
shader_param/angle = 0.35
shader_param/position = 0.18
shader_param/spread = 0.32
shader_param/cutoff = 0.34
shader_param/falloff = 0.2
shader_param/edge_fade = 0.156
shader_param/speed = 10.0
shader_param/ray1_density = 10.0
shader_param/ray2_density = 5.0
shader_param/ray2_intensity = 1.0
shader_param/color = Color( 0.384314, 1, 0, 1 )
shader_param/hdr = false
shader_param/seed = 5.0

[sub_resource type="Animation" id=46]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.34 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/falloff")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.2 ]
}

[sub_resource type="Animation" id=50]
resource_name = "activate"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/cutoff")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.34 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/falloff")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.2 ]
}

[sub_resource type="Animation" id=47]
resource_name = "teleport_start"
length = 5.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/cutoff")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5, 3, 4, 4.8, 5.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.34, 0.112, 0.112, 0.34, 0.34, 0.512 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/falloff")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 4, 5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.2, 0.2, 1.0 ]
}

[sub_resource type="Animation" id=48]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 293.938, 62.6407 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Rect2( -1.44893, -5.66984, 27.2352, 79.6105 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1.0026, 0.723264 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:texture")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 18 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:flip_v")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite:flip_h")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=49]
resource_name = "drop_in_water"
length = 7.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3.2, 3.9, 7 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 293.938, 62.6407 ), Vector2( 293.938, 550.461 ), Vector2( 293.938, 550.461 ), Vector2( 180.937, 550.461 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 3, 3.2, 3.9, 4.4, 4.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Rect2( -1.449, -1.05932, 27.235, 72.5545 ), Rect2( -1.449, -1.05932, 27.235, 72.5545 ), Rect2( -1.449, 70.8471, 27.235, 1.04938 ), Rect2( -1.449, 70.8471, 27.235, 1.04938 ), Rect2( -1.449, 70.8471, 27.235, 1.04938 ), Rect2( -1.449, -0.775903, 27.235, 17.2737 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 3.9, 4.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ ExtResource( 18 ), ExtResource( 18 ), ExtResource( 17 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:flip_v")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3.9, 4.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:flip_h")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 4.2 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[node name="room2" type="Node2D"]
script = ExtResource( 6 )
__meta__ = {
"_edit_horizontal_guides_": [ 818.0 ]
}
global_id = "room2"
esc_script = "res://game/rooms/room02/esc/room02_bridge.esc"
player_scene = ExtResource( 4 )
camera_limits = [ Rect2( 0, 0, 1381, 900 ) ]
editor_debug_mode = 1

[node name="ESCBackground" type="TextureRect" parent="."]
margin_right = 1381.0
margin_bottom = 758.0
mouse_filter = 2
texture = ExtResource( 1 )
script = ExtResource( 9 )

[node name="room_label" type="Label" parent="ESCBackground"]
margin_left = 18.0
margin_top = 12.0
margin_right = 100.0
margin_bottom = 33.0
custom_fonts/font = ExtResource( 3 )
text = "ROOM 2"

[node name="teleport" type="Area2D" parent="."]
pause_mode = 1
script = ExtResource( 7 )
global_id = "teleport"
esc_script = "res://game/rooms/room02/esc/teleport.esc"
tooltip_name = "beam capacitor"
default_action = "look"
combine_when_selected_action_is_in = [  ]
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="teleport"]
position = Vector2( 620.1, -307.08 )
scale = Vector2( 0.237259, 1.1363 )
polygon = PoolVector2Array( 854.447, 544.823, 858, 411, 1287.34, 413.325, 1289.46, 545.758 )

[node name="action_pos" type="Position2D" parent="teleport"]
position = Vector2( 848, 528 )
script = ExtResource( 8 )

[node name="panel" type="Area2D" parent="."]
pause_mode = 1
script = ExtResource( 7 )
global_id = "panel"
esc_script = "res://game/rooms/room02/esc/panel.esc"
interaction_direction = 2
tooltip_name = "control panel"
default_action = "look"
combine_when_selected_action_is_in = [  ]
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="panel"]
position = Vector2( -0.000244141, 5.58377 )
scale = Vector2( 1, 1.33187 )
polygon = PoolVector2Array( 1102, 351, 1102, 414, 1215, 422, 1242, 420, 1245, 374, 1235, 351 )

[node name="action_pos" type="Position2D" parent="panel"]
position = Vector2( 1076, 569 )
script = ExtResource( 8 )
interaction_direction = 3

[node name="l_door" type="Area2D" parent="."]
pause_mode = 1
position = Vector2( -2, 274 )
script = ExtResource( 7 )
global_id = "r2_l_exit"
esc_script = "res://game/rooms/room02/esc/left_exit.esc"
is_exit = true
tooltip_name = "Left exit"
default_action = "walk"
combine_when_selected_action_is_in = [  ]
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="l_door"]
polygon = PoolVector2Array( -1.37926, 443.158, 7.96461, 122.796, 84.0504, 77.4118, 88.055, 377.751 )

[node name="Position2D" type="Position2D" parent="l_door"]
position = Vector2( 52.1462, 384.691 )
script = ExtResource( 8 )

[node name="player_start" type="Position2D" parent="."]
position = Vector2( 99, 664 )
script = ExtResource( 8 )
global_id = "r2_player_start"
is_start_location = true
interaction_direction = 2

[node name="walkable_area" type="Navigation2D" parent="."]
z_index = 1000
script = ExtResource( 10 )
scale_max = 0.5
player_doubleclick_speed_multiplier = 10.0
debug_mode = 1

[node name="NavigationPolygonInstance" type="NavigationPolygonInstance" parent="walkable_area"]
visible = false
position = Vector2( 0, 115 )
navpoly = SubResource( 43 )

[node name="water" type="Sprite" parent="."]
material = SubResource( 42 )
position = Vector2( 281, 334 )
scale = Vector2( 2.32, 10 )
z_index = 2
texture = ExtResource( 2 )
script = ExtResource( 5 )

[node name="beamray" type="Area2D" parent="."]
pause_mode = 1
z_index = 1000
script = ExtResource( 7 )
global_id = "beamray"
esc_script = "res://game/rooms/room02/esc/beamray.esc"
interaction_direction = 4
tooltip_name = "beam ray"
combine_when_selected_action_is_in = [  ]
inventory_texture = ExtResource( 11 )
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="Sprite" type="Sprite" parent="beamray"]
material = SubResource( 45 )
position = Vector2( 891.5, 390.25 )
scale = Vector2( 7.02778, 10.4028 )
z_index = 1000
texture = ExtResource( 11 )

[node name="ESCLocation" type="Position2D" parent="beamray"]
position = Vector2( 750, 504 )
script = ExtResource( 8 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="beamray"]
polygon = PoolVector2Array( 839, 286, 773, 518, 859, 538, 942, 515, 899, 285 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="beamray"]
anims/RESET = SubResource( 46 )
anims/activate = SubResource( 50 )
anims/teleport_start = SubResource( 47 )

[node name="waterfall" type="Area2D" parent="."]
pause_mode = 1
script = ExtResource( 7 )
global_id = "qweqwe"
esc_script = "res://game/rooms/room02/esc/waterfall.esc"
tooltip_name = "qweqweqwe"
combine_when_selected_action_is_in = [  ]
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="ESCLocation" type="Position2D" parent="waterfall"]
position = Vector2( 376, 633 )
script = ExtResource( 8 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="waterfall"]
visible = false
position = Vector2( -994, -451 )
polygon = PoolVector2Array( 1231, 1011, 1324, 1010, 1348, 566, 1228, 565 )

[node name="panel_location" type="Area2D" parent="."]
pause_mode = 1
script = ExtResource( 7 )
global_id = "panel_location"
combine_when_selected_action_is_in = [  ]
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="action_pos" type="Position2D" parent="panel_location"]
position = Vector2( 741, 450 )
script = ExtResource( 8 )

[node name="teleport_location" type="Position2D" parent="."]
position = Vector2( 869, 516 )
script = ExtResource( 8 )
global_id = "teleport_location"
interaction_direction = 4

[node name="swim_location" type="Position2D" parent="."]
position = Vector2( -53, 620 )
script = ExtResource( 8 )
global_id = "swim_location"
interaction_direction = 4

[node name="waterfall_teleport_anim" type="Area2D" parent="."]
pause_mode = 1
script = ExtResource( 7 )
global_id = "waterfall_teleport_anim"
combine_when_selected_action_is_in = [  ]
inventory_texture = ExtResource( 18 )
dialog_color = Color( 1, 1, 1, 1 )
animations = null

[node name="Sprite" type="Sprite" parent="waterfall_teleport_anim"]
position = Vector2( 293.938, 62.6407 )
scale = Vector2( 1.0026, 0.723264 )
z_index = 1
texture = ExtResource( 18 )
flip_h = true
flip_v = true
region_enabled = true
region_rect = Rect2( -1.44893, -5.66984, 27.2352, 79.6105 )
region_filter_clip = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="waterfall_teleport_anim"]
anims/RESET = SubResource( 48 )
anims/drop_in_water = SubResource( 49 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 179, 537 )
z_index = 2
texture = ExtResource( 19 )

[node name="bean_activation_location" type="Position2D" parent="."]
position = Vector2( 1026, 551 )
script = ExtResource( 8 )
global_id = "bean_activation_location"
interaction_direction = 6

[node name="Sprite2" type="Sprite" parent="."]
position = Vector2( 255, 717 )
z_index = 800
texture = ExtResource( 16 )

[node name="Sprite3" type="Sprite" parent="."]
position = Vector2( 937, 728 )
z_index = 800
texture = ExtResource( 20 )

[node name="Sprite4" type="Sprite" parent="."]
position = Vector2( 281, 92 )
z_index = 800
texture = ExtResource( 12 )

[connection signal="item_rect_changed" from="water" to="water" method="_on_Waterfall_item_rect_changed"]
